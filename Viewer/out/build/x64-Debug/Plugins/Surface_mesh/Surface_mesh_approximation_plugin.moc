/****************************************************************************
** Meta object code from reading C++ file 'Surface_mesh_approximation_plugin.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.9)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#include <QtCore/qplugin.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'Surface_mesh_approximation_plugin.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.9. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_Polyhedron_demo_surface_mesh_approximation_plugin_t {
    QByteArrayData data[12];
    char stringdata0[319];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Polyhedron_demo_surface_mesh_approximation_plugin_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Polyhedron_demo_surface_mesh_approximation_plugin_t qt_meta_stringdata_Polyhedron_demo_surface_mesh_approximation_plugin = {
    {
QT_MOC_LITERAL(0, 0, 49), // "Polyhedron_demo_surface_mesh_..."
QT_MOC_LITERAL(1, 50, 43), // "on_actionSurfaceMeshApproxima..."
QT_MOC_LITERAL(2, 94, 0), // ""
QT_MOC_LITERAL(3, 95, 24), // "on_buttonSeeding_clicked"
QT_MOC_LITERAL(4, 120, 20), // "on_buttonFit_clicked"
QT_MOC_LITERAL(5, 141, 20), // "on_buttonAdd_clicked"
QT_MOC_LITERAL(6, 162, 25), // "on_buttonTeleport_clicked"
QT_MOC_LITERAL(7, 188, 22), // "on_buttonSplit_clicked"
QT_MOC_LITERAL(8, 211, 24), // "on_buttonMeshing_clicked"
QT_MOC_LITERAL(9, 236, 34), // "on_comboMetric_currentIndexCh..."
QT_MOC_LITERAL(10, 271, 22), // "itemAboutToBeDestroyed"
QT_MOC_LITERAL(11, 294, 24) // "CGAL::Three::Scene_item*"

    },
    "Polyhedron_demo_surface_mesh_approximation_plugin\0"
    "on_actionSurfaceMeshApproximation_triggered\0"
    "\0on_buttonSeeding_clicked\0"
    "on_buttonFit_clicked\0on_buttonAdd_clicked\0"
    "on_buttonTeleport_clicked\0"
    "on_buttonSplit_clicked\0on_buttonMeshing_clicked\0"
    "on_comboMetric_currentIndexChanged\0"
    "itemAboutToBeDestroyed\0CGAL::Three::Scene_item*"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Polyhedron_demo_surface_mesh_approximation_plugin[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       9,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   59,    2, 0x0a /* Public */,
       3,    0,   60,    2, 0x0a /* Public */,
       4,    0,   61,    2, 0x0a /* Public */,
       5,    0,   62,    2, 0x0a /* Public */,
       6,    0,   63,    2, 0x0a /* Public */,
       7,    0,   64,    2, 0x0a /* Public */,
       8,    0,   65,    2, 0x0a /* Public */,
       9,    1,   66,    2, 0x0a /* Public */,
      10,    1,   69,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int,    2,
    QMetaType::Void, 0x80000000 | 11,    2,

       0        // eod
};

void Polyhedron_demo_surface_mesh_approximation_plugin::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Polyhedron_demo_surface_mesh_approximation_plugin *_t = static_cast<Polyhedron_demo_surface_mesh_approximation_plugin *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->on_actionSurfaceMeshApproximation_triggered(); break;
        case 1: _t->on_buttonSeeding_clicked(); break;
        case 2: _t->on_buttonFit_clicked(); break;
        case 3: _t->on_buttonAdd_clicked(); break;
        case 4: _t->on_buttonTeleport_clicked(); break;
        case 5: _t->on_buttonSplit_clicked(); break;
        case 6: _t->on_buttonMeshing_clicked(); break;
        case 7: _t->on_comboMetric_currentIndexChanged((*reinterpret_cast< const int(*)>(_a[1]))); break;
        case 8: _t->itemAboutToBeDestroyed((*reinterpret_cast< CGAL::Three::Scene_item*(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 8:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 0:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< CGAL::Three::Scene_item* >(); break;
            }
            break;
        }
    }
}

const QMetaObject Polyhedron_demo_surface_mesh_approximation_plugin::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_Polyhedron_demo_surface_mesh_approximation_plugin.data,
      qt_meta_data_Polyhedron_demo_surface_mesh_approximation_plugin,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *Polyhedron_demo_surface_mesh_approximation_plugin::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Polyhedron_demo_surface_mesh_approximation_plugin::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_Polyhedron_demo_surface_mesh_approximation_plugin.stringdata0))
        return static_cast<void*>(this);
    if (!strcmp(_clname, "Polyhedron_demo_plugin_helper"))
        return static_cast< Polyhedron_demo_plugin_helper*>(this);
    if (!strcmp(_clname, "com.geometryfactory.PolyhedronDemo.PluginInterface/1.0"))
        return static_cast< CGAL::Three::Polyhedron_demo_plugin_interface*>(this);
    return QObject::qt_metacast(_clname);
}

int Polyhedron_demo_surface_mesh_approximation_plugin::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 9)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 9;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 9)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 9;
    }
    return _id;
}

QT_PLUGIN_METADATA_SECTION const uint qt_section_alignment_dummy = 42;

#ifdef QT_NO_DEBUG

QT_PLUGIN_METADATA_SECTION
static const unsigned char qt_pluginMetaData[] = {
    'Q', 'T', 'M', 'E', 'T', 'A', 'D', 'A', 'T', 'A', ' ', ' ',
    'q',  'b',  'j',  's',  0x01, 0x00, 0x00, 0x00,
    0xe0, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0xcc, 0x00, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00,
    0x03, 0x00, 'I',  'I',  'D',  0x00, 0x00, 0x00,
    '6',  0x00, 'c',  'o',  'm',  '.',  'g',  'e', 
    'o',  'm',  'e',  't',  'r',  'y',  'f',  'a', 
    'c',  't',  'o',  'r',  'y',  '.',  'P',  'o', 
    'l',  'y',  'h',  'e',  'd',  'r',  'o',  'n', 
    'D',  'e',  'm',  'o',  '.',  'P',  'l',  'u', 
    'g',  'i',  'n',  'I',  'n',  't',  'e',  'r', 
    'f',  'a',  'c',  'e',  '/',  '1',  '.',  '0', 
    0x1b, 0x0c, 0x00, 0x00, 0x09, 0x00, 'c',  'l', 
    'a',  's',  's',  'N',  'a',  'm',  'e',  0x00,
    '1',  0x00, 'P',  'o',  'l',  'y',  'h',  'e', 
    'd',  'r',  'o',  'n',  '_',  'd',  'e',  'm', 
    'o',  '_',  's',  'u',  'r',  'f',  'a',  'c', 
    'e',  '_',  'm',  'e',  's',  'h',  '_',  'a', 
    'p',  'p',  'r',  'o',  'x',  'i',  'm',  'a', 
    't',  'i',  'o',  'n',  '_',  'p',  'l',  'u', 
    'g',  'i',  'n',  0x00, ':',  '!',  0xa1, 0x00,
    0x07, 0x00, 'v',  'e',  'r',  's',  'i',  'o', 
    'n',  0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
    0x05, 0x00, 'd',  'e',  'b',  'u',  'g',  0x00,
    0x15, 0x18, 0x00, 0x00, 0x08, 0x00, 'M',  'e', 
    't',  'a',  'D',  'a',  't',  'a',  0x00, 0x00,
    0x0c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0xb0, 0x00, 0x00, 0x00, 'P',  0x00, 0x00, 0x00,
    0xa4, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00
};

#else // QT_NO_DEBUG

QT_PLUGIN_METADATA_SECTION
static const unsigned char qt_pluginMetaData[] = {
    'Q', 'T', 'M', 'E', 'T', 'A', 'D', 'A', 'T', 'A', ' ', ' ',
    'q',  'b',  'j',  's',  0x01, 0x00, 0x00, 0x00,
    0xe0, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0xcc, 0x00, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00,
    0x03, 0x00, 'I',  'I',  'D',  0x00, 0x00, 0x00,
    '6',  0x00, 'c',  'o',  'm',  '.',  'g',  'e', 
    'o',  'm',  'e',  't',  'r',  'y',  'f',  'a', 
    'c',  't',  'o',  'r',  'y',  '.',  'P',  'o', 
    'l',  'y',  'h',  'e',  'd',  'r',  'o',  'n', 
    'D',  'e',  'm',  'o',  '.',  'P',  'l',  'u', 
    'g',  'i',  'n',  'I',  'n',  't',  'e',  'r', 
    'f',  'a',  'c',  'e',  '/',  '1',  '.',  '0', 
    0x15, 0x0c, 0x00, 0x00, 0x08, 0x00, 'M',  'e', 
    't',  'a',  'D',  'a',  't',  'a',  0x00, 0x00,
    0x0c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x9b, 0x0f, 0x00, 0x00,
    0x09, 0x00, 'c',  'l',  'a',  's',  's',  'N', 
    'a',  'm',  'e',  0x00, '1',  0x00, 'P',  'o', 
    'l',  'y',  'h',  'e',  'd',  'r',  'o',  'n', 
    '_',  'd',  'e',  'm',  'o',  '_',  's',  'u', 
    'r',  'f',  'a',  'c',  'e',  '_',  'm',  'e', 
    's',  'h',  '_',  'a',  'p',  'p',  'r',  'o', 
    'x',  'i',  'm',  'a',  't',  'i',  'o',  'n', 
    '_',  'p',  'l',  'u',  'g',  'i',  'n',  0x00,
    '1',  0x00, 0x00, 0x00, 0x05, 0x00, 'd',  'e', 
    'b',  'u',  'g',  0x00, ':',  '!',  0xa1, 0x00,
    0x07, 0x00, 'v',  'e',  'r',  's',  'i',  'o', 
    'n',  0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
    'P',  0x00, 0x00, 0x00, 'l',  0x00, 0x00, 0x00,
    0xb0, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x00, 0x00
};
#endif // QT_NO_DEBUG

QT_MOC_EXPORT_PLUGIN(Polyhedron_demo_surface_mesh_approximation_plugin, Polyhedron_demo_surface_mesh_approximation_plugin)

QT_WARNING_POP
QT_END_MOC_NAMESPACE
